{
    "sign": {
        "title": "Performance test platform",
        "slogn": "Foresee the future, Easy ground linee",
        "email_register": "Registered mail",
        "email_login": "Email login",
        "phone_login": "Phone login",
        "language": "language",
        "toRegister": "No account, register now",
        "tologin": "No account, sign up now",
        "forgetPwd": "Forget Password",
        "nologin": "Login is not required within 30 days",
        "errorEmail": "Please enter the correct email address",
        "errorEmailOrPhone": "Please enter the correct mobile phone number or email address",
        "errorPwd": "Please enter the correct password",
        "confirmError": "The two passwords are inconsistent",
        "nicknameError": "Nickname length is 2-30 digits",
        "passwordError": "The password length is 6-20 bits",
        "findPwd": "Retrieve password",
        "resetPwd": "Send Reset Password",
        "findToLogin": "Go to login",
        "emailSuccess": "The email with password retrieved was sent successfully! Please log in to your email to view",
        "email": "Email",
        "account": "Account",
        "email_tips": "If you don't receive it, please try to check your mailbox trash or try again later",
        "send_again": "You can resend the password reset email with the following buttons",
        "reset": "reset password",
        "password": "Password",
        "teamNameError": "The team name needs 1-25 characters",
        "read": "Read and agree",
        "service": "Service Agreement",
        "privacy": "Privacy Agreement",
        "and": "and",
        "invitateContent1": "Invite you to enter",
        "invitateContent2": "team",
        "clickBottomTeam": "Click below to log in to view the team",
        "acceptInvitate": "Accept invitation",
        "passwordLogin": "Password Login",
        "codeLogin": "Authentication code login",
        "registerTrial": "Register for trial",
        "findByPhone": "Phone number retrieval",
        "findByEmail": "Email retrieval",
        "phone": "Phone",
        "emailNotRegister": "This mailbox is not registered, please register first",
        "pwdFormatError": "Incorrect password format",
        "nickname": "nickname",
        "welcomeTitle": "Welcome to RunnerGo",
        "type": {
            "0": "Sign in",
            "1": "logon"
        },
        "pwdError": "Password error",
        "loginAndRegister": "Login/Registration",
        "setPassword": "Set Password",
        "phoneTipShow1": "Please provide",
        "phoneTipShow2": "Set a password within 6-20 bits",
        "plsWxScan": "Please login/register for RunnerGo using WeChat scanning code",
        "wxAgree": "Scanning the code to log in/register indicates that you have read and agree",
        "bindPhone": "Bind phone number",
        "bindPhoneTips": "Bind your phone number and receive a 15 day free trial+5000VUM rookie gift pack!",
        "wxLoginTitle": "WeChat login/registration",
        "plsInputPwd": "Please enter a 6-20 digit password",
        "confirmPwdError": "The passwords entered do not match",
        "newUserReward": "Get 5000 VUM for free using Enterprise Edition - SaaS",
        "toWebSite1": "Welcome to",
        "runnergoWebSite": "RunnerGo official website",
        "toWebSite2": "Learn more"
    },
    "header": {
        "import": "import",
        "asyncImport": "Sync Apipost",
        "otherImport": "Import other projects",
        "globalVar": "Global param",
        "globalParam": "Global param",
        "commonFunc": "Common Func",
        "envManage": "Env Manage",
        "running": "Running",
        "invitation": "Invite",
        "handleLog": "History",
        "signOut": "Quit",
        "menu": "Settings",
        "changeLge": "Language",
        "changeTheme": "Theme",
        "myInfo": "Homepage",
        "doc": "Usage documents",
        "customer": "Customer service",
        "offline": "Off-line team",
        "teamNum": "Number of team members",
        "homePage": "Personal homepage",
        "privateCanNotInvite": "Private teams cannot invite members"
    },
    "leftBar": {
        "index": "Home",
        "apis": "Test object",
        "scene": "Scene",
        "plan": "Plan",
        "test": "Test",
        "performance": "Function",
        "report": "Report",
        "machine": "Machine",
        "docs": "Docs",
        "preset": "Preset",
        "resourceManage": "Resource manage",
        "myResource": "My Resources",
        "orderManage": "Order manage",
        "invoiceManage": "Invoice manage",
        "darkMode": "Dark mode",
        "whiteMode": "Light mode",
        "language": "language",
        "theme": "theme",
        "env": "Env",
        "mockservice": "Mock server",
        "mgmt": {
            "element": "Element Mgmt",
            "scene": "Scene Mgmt",
            "plan": "Plan Mgmt",
            "report": "Report Mgmt"
        }
    },
    "placeholder": {
        "searchApis": "Search for Directory/API",
        "searchFolder": "Search for Directory",
        "searchScene": "Search groups or scenes",
        "searchPlan": "Search Plan Name/Performer",
        "groupName": "Please enter a group name",
        "groupDesc": "Please enter a group description",
        "sceneName": "Please enter the scene name (up to 30 words)",
        "sceneDesc": "Please enter a scene description (up to 50 words)",
        "folderName": "Please enter a directory name",
        "folderDesc": "Please enter a directory description",
        "apiName": "Please enter the interface name",
        "reportName": "Please enter a report name",
        "apiUrl": "Enter Request URL",
        "bodyValue": "Value",
        "bodyDesc": "Description",
        "plsSelect": "Please select",
        "plsInput": "Please enter",
        "cronContent": "Execute every 5 seconds: */5 * * * *?",
        "invitedEmail": "Please enter the email address of the invitee",
        "email": "Email",
        "password": "Please enter a password of at least 6 digits",
        "confirmPwd": "Confirm password",
        "nickname": "Please enter a nickname of at least 2 digits",
        "teamName": "Please enter a 1-25 digit team name",
        "searchTeam": "Search Team Name",
        "newPwd": "Please enter a new password",
        "currentPwd": "Please enter the current password",
        "planName": "Please enter the plan name",
        "planDesc": "Please enter the plan description",
        "varName": "var: {{name}}",
        "varVal": "Value",
        "remark": "Remark",
        "line": "≥50 & ≤100",
        "auth": {
            "key": "Key",
            "value": "Value (support variable)",
            "token": "Token (supporting variables)",
            "username": "User name (variable supported)",
            "password": "Password (support variable)"
        },
        "unitS": "unit: s",
        "unitR": "unit: r",
        "startTime": "Select the start time",
        "endTime": "Select the end time",
        "searchMachine": "Search for machine name",
        "configName": "Config name is required",
        "configSearch": "Search Configuration Name",
        "caseName": "Please enter the case name",
        "caseDesc": "Please enter the case description",
        "searchCase": "Search case name",
        "envBeforeUrl": "Pre URL can be filled in here",
        "envName": "Please enter the env name",
        "searchEnv": "Search env name",
        "phone": "Please enter your mobile number",
        "phoneCode": "Please enter the verification code",
        "emailAndPhone": "Please enter your mobile or email",
        "companyName": "Please fill in the full name of the company",
        "invoicePhone": "Please fill in the contact number",
        "taxId": "Please fill in 15-digit, 18-digit or 20-digit numbers",
        "openBank": "Please fill in the company's basic bank of deposit",
        "openAddress": "Please fill in the company address",
        "bankAccount": "Please fill in the company's bank account",
        "clientName": "Please enter the client name",
        "sqlName": "Please enter SQL name",
        "keyWord": "Please enter search keywords",
        "protocolType": "Please select a communication protocol",
        "serviceName": "Please enter a service name",
        "serviceContent": "Please enter the service address",
        "dbName": "Please enter a database name",
        "diyName": "Please enter a custom name",
        "dbIP": "Please enter the IP address of the host where the database is located",
        "dbPort": "Please enter the port number on which the database server is listening",
        "dbUser": "Please input a username",
        "dbPwd": "Please input a password",
        "dbCharset": "Please enter the database encoding set",
        "selectDb": "Please select your database",
        "selectEnv": "Please select your env",
        "selectService": "Please select your service",
        "tcpName": "Please input a tcp name",
        "searchNickNameAccount": "Search for nicknames/accounts",
        "wsName": "Please input a websocket name",
        "wsUrl": "Please enter the WebSocket request or path",
        "json_path": "JSON Path Expression, e.g., $.data.info.name",
        "json_path_doc": "JSON Path Documentation",
        "nameFilter": "Filter by name",
        "inputVarName": "Please input a var name",
        "intervalTime": "Interval time",
        "runNumMax": "Number of executions (maximum of 100)"
    },
    "btn": {
        "view": "View",
        "cancel": "Cancel",
        "save": "Save",
        "notSave": "Not save",
        "run": "Start debug",
        "runPlan": "Run plan",
        "start": "Start",
        "finish": "Stop",
        "createPlan": "New Plan",
        "runScene": "Debug",
        "prePage": "Page up",
        "nextPage": "Page down",
        "jump": "Go",
        "switchLanguage": "Chinese English switch",
        "notifyEmail": "Notify",
        "notif": "Notify",
        "batch_notif": "Batch Nofify",
        "breakTask": "Abort Task",
        "done": "Done",
        "sending": "Sending...",
        "send": "Send",
        "beautify": "Pretty",
        "simplify": "Simplify",
        "primitive": "Raw",
        "cancelSend": "Cancel sending",
        "createScene": "New scene",
        "stopRun": "Stop",
        "addScene": "Add Scene",
        "selectAll": "Select All",
        "running": "Running",
        "ok": "Confirm",
        "addMem": "Add People",
        "close": "Close",
        "registerNow": "Get started",
        "loginNow": "Sign in now",
        "quitTeam": "Exit the team",
        "transferTeam": "Handover Team",
        "confirmDissmiss": "Confirm dissolution",
        "contrast": "Contrast",
        "sendAgain": "Resend",
        "return": "Return",
        "invitation": "Invite",
        "selectImg": "Select a picture",
        "okDelMum": "Confirm Removal",
        "add": "Add",
        "seeResult": "Response",
        "updateConfig": "Modify Config",
        "toBeautify": "Pretty",
        "machineStart": "Start",
        "machineStop": "Shutoff",
        "delete": "Delete",
        "create": "Create",
        "createEnv": "Create env",
        "getCode": "Get code",
        "nextStep": "Next step (1/2)",
        "next": "Next step",
        "contactMe": "contact us",
        "estimateVum": "Estimated VUM",
        "asyncApipostApi": "Async Apipost Api",
        "connect": "Connect",
        "stopConnect": "Disconnect",
        "connecting": "Connecting...",
        "connectAndSave": "Connect And Save",
        "rerun": "Rerun",
        "copyCode": "Copy Code"
    },
    "message": {
        "saveSuccess": "Saving succeeded!",
        "saveToTargetSuccess": "Saved to target successfully!",
        "syncToTargetSuccess": "Synchronized to target successfully!",
        "saveError": "Save failed!",
        "stopSuccess": "Stop succeeded!",
        "stopError": "Stop failed!",
        "groupNameEmpty": "Group name cannot be empty!",
        "caseNameEmpty": "Case name cannot be empty!",
        "createGroupSuccess": "New group succeeded!",
        "SceneNameEmpty": "The scene name cannot be empty!",
        "createSceneSuccess": "Create scenario successfully!",
        "createSceneError": "Failed to create a scene!",
        "maxFileNum": "Upload up to 5 files!",
        "maxFileSize": "File is too large!",
        "FileType": "Only csv and txt files are supported!",
        "AvatarType": "Only jpg, jpeg and png images are supported",
        "deleteSuccess": "Deletion succeeded!",
        "deleteError": "Delete failed!",
        "uploadSuccess": "Upload succeeded!",
        "copySuccess": "Copy succeeded!",
        "copyError": "Copy failed!",
        "handleSuccess": "Operation succeeded!",
        "handleError": "operation failed!",
        "updateSuccess": "Modification successful!",
        "updateError": "Modification failed!",
        "setSuccess": "Setting succeeded!",
        "setError": "Setting failed!",
        "runSuccess": "Run successfully!",
        "quitSuccess": "Exit succeeded!",
        "quitError": "Exit failed!",
        "checkTeamError": "Failed to switch teams!",
        "createSuccess": "Created successfully!",
        "createError": "Creation failed!",
        "noTeamName": "No team name entered!",
        "removeMemSuccess": "Removal succeeded!",
        "removeMemError": "Removal failed!",
        "check": "Please verify!",
        "loginSuccess": "Login succeeded!",
        "registerSuccess": "login was successful!",
        "pwdDiff": "The old and new passwords are inconsistent!",
        "resCode": {
            "10001": "Operation failure, try again later~",
            "10002": "Operation failure, try again later~",
            "10003": "SignError!",
            "10004": "ErrRepeatRequest!",
            "10005": "ErrNonce!",
            "10006": "ErrTimeStamp!",
            "10007": "Operation failure, try again later~",
            "10011_10103": "Login status is invalid~",
            "20001": "ErrMustDID!",
            "20002": "ErrMustSN!",
            "20004": "User name or password error!",
            "20005": "User registered",
            "20008": "fill in the Task allocation and save it",
            "20009": "Insufficient resources",
            "20010": "The scene cannot be empty",
            "20011": "preinstall yet exists",
            "20012": "report not found",
            "20013": "invite code failed",
            "20014": "Current default team error",
            "20015": "Database record already exists",
            "20016": "Test case cannot be empty",
            "20017": "scene case name is exist",
            "20018": "Interface name already exists",
            "20019": "Group name already exists",
            "20020": "Folder name already exists",
            "20021": "Scene name already exists",
            "20022": "Plan name already exists",
            "20023": "environment name is exist",
            "20024": "The report data is being generated, please check it later",
            "20025": "Mobile number has been registered",
            "20026": "The verification code is sent illegally",
            "20027": "Incorrect verification code",
            "20028": "Sorry, the number of purchasers in this team is not within the range",
            "20029": "No available teams found",
            "20030": "Account not registered",
            "20032": "The team has expired, please renew it in time",
            "20033": "The invoice cannot be issued repeatedly. If you need to issue it again, please contact the customer service",
            "20034": "The number of teams has exceeded the upper limit",
            "20035": "The number of concurrency exceeds the upper limit",
            "20036": "The duration exceeds the upper limit",
            "20037": "Running rounds exceed the upper limit",
            "20038": "Cannot exceed the maximum concurrent number",
            "20039": "Cannot exceed the maximum concurrent number",
            "20040": "The maximum duration of the team package has been exceeded",
            "20041": "The maximum limit of the team package has been exceeded",
            "20042": "The warm-up time cannot exceed",
            "20043": "Preset configuration name already exists",
            "20044": "Limited by the team package, the maximum new/referenced interfaces in a single scenario cannot exceed the upper limit",
            "20045": "Only 1-50 recipients can be added for sending at a time",
            "20046": "The number of invitees has exceeded the team member limit. Please upgrade the team to complete the invitation",
            "20047": "Only press monitoring data within 15 days can be queried",
            "20048": "The planned scene cannot have the same name!",
            "20049": "Plan name cannot be empty",
            "common": "Operation failure, try again later~"
        },
        "folderNameEmpty": "Directory name cannot be empty!",
        "createFolderSuccess": "New directory succeeded!",
        "invitateSuccess": "Invitation succeeded!",
        "invitateError": "Invitation failed!",
        "resetSuccess": "Reset succeeded!",
        "resetError": "Reset failed!",
        "sendSuccess": "Send succeeded!!",
        "sendError": "Send failed!",
        "copyClipboard": "Successfully copied content to clipboard",
        "apiWeight": "Api weight range is 1-100!",
        "lineError": "The input number can only be greater than or equal to 50 and less than 100",
        "shiftDelFolder": "Are you sure you want to delete this directory completely? Will not be recoverable",
        "restoreFolder": "Are you sure you want to restore the directory?",
        "shiftDelApi": "Are you sure you want to delete this API completely? Will not be recoverable",
        "restoreApi": "Whether API recovery is required",
        "saveTagSuccess": "Successfully saved all labels",
        "NewSuccess": "New successfully!",
        "NewError": "New Failed!",
        "PlanNameEmpty": "Plan name cannot be empty!",
        "closeLoop": "Can't realize close the loop, Please create a node in the lower part",
        "addSuccess": "Successfully added",
        "addError": "Fail to added",
        "runPlanTooltip": "Start run and notify all recipients",
        "emptyScene": "Please add the API first",
        "taskConfigEmpty": "The required fields cannot be empty!",
        "endGTstart": "End time must be greater than execution time",
        "contrastMode": "The reporting mode for comparison must be the same!",
        "contrastRunning": "Running reports cannot be compared!",
        "configNameEmpty": "Configuration name cannot be empty!",
        "teamNameLong": "Team name cannot be greater than 25 characters!",
        "selectAgreement": "Please check the registration agreement",
        "importEmpty": "The current directory is empty, and there is no data import!",
        "emptyEnvName": "Environment name cannot be empty!",
        "emptyService": "The service name/domain name cannot be empty!",
        "importSuccess": "Import Successfully!",
        "phoneFormatError": "Mobile number format error!",
        "cantCreateScene": "In the scheduled task mode, the plan can only have one scenario.",
        "runTiming": "Run successfully! The schedule will run at the scheduled task start time",
        "inviteLarge": "The number of invitees has exceeded the team member limit. Please upgrade the team to complete the invitation",
        "filenameRepeat": "The file name you uploaded already exists!",
        "varNameFormatError": "Variable name format error",
        "plsInputTrueValue": "Please enter the content with correct format",
        "importFileFormatError": "Please check whether you have selected the correct data format and data file!",
        "currentPwdEmpty": "The current password cannot be empty",
        "newPwdEmpty": "The new password cannot be empty",
        "confirmPwdEmpty": "Confirm password cannot be empty",
        "dateRangeError": "The time span cannot exceed 365 days",
        "inTeamNow": "The user has joined the team",
        "csvFileError": "The file content is incorrect, please use the parameterized file!",
        "emptyData": "There are required items not filled in!",
        "submitSuccess": "Submitted successfully!",
        "plsInputTrueEmail": "Please enter the correct mailbox format!",
        "apiNameEmpty": "API name cannot be empty",
        "cloneSuccess": "Clone succeeded!",
        "runningSceneCanNotDelete": "The current scene is running, and cannot be deleted!",
        "runningSceneCanNotHandle": "Not editable during debugging!",
        "userLogout": "Your account has been logged in elsewhere, and RunnerGo does not support multi-platform login. If it is not your own operation, please change your password in a timely manner",
        "asyncSuccess": "Sync successful!",
        "selectEmpty": "You have not selected any content!",
        "cookieNameRepeat": "Duplicate cookie name!",
        "keyRepeat": "Duplicate parameter name!",
        "varRepeat": "Variable name duplication!",
        "SqlNameEmpty": "SQL name cannot be empty",
        "tcpNameEmpty": "TCP name cannot be empty",
        "connectTestSuccess": "Connection test successful!",
        "didNotSelectMember": "You have not selected any members!",
        "disableSceneSuccess": "Disable Scene Success",
        "enableSceneSuccess": "Enable Scene Success",
        "weightTotalErr": "The total weight of the machine must be equal to 100!",
        "extractSuccess": "Extract Success!",
        "exportSuccess": "Export Success!!",
        "onlyExtractKey": "Only Can Extract JSON Key",
        "runningReportCanNotExport": "Running report cannot be exported!",
        "plsInputCode": "Please enter the code",
        "selectEnvBeforeSave": "Please select an environment to save first",
        "selectRepeatSyncData": "The synchronized data has already been selected. Selecting this item will cancel the original item",
        "sceneSelectEnvEmpty": "There is no environment selected for this scene. Please select the environment in the scene and proceed"
    },
    "modal": {
        "globalCookieTip": "The global cookie in the enabled state will automatically be brought to every interface under the team",
        "globalHeaderTip": "The global header in the enabled state will automatically be brought to every interface under the team",
        "globalVarTip": "The calling method for global variables is to use two {{}} reference variable names, such as {{variable name}}",
        "globalAssertTip": "The global assertion of the enabled state will be automatically brought to every interface under the team",
        "sceneCookieTip": "The scenario cookie in the enabled state will automatically be brought to each interface in that scenario",
        "sceneHeaderTip": "The scenario header in the enabled state will automatically be brought to each interface in that scenario",
        "sceneVarTip": "The calling method for variables is to use two {{}} reference variable names, such as {{variable name}}",
        "sceneAssertTip": "The scenario assertion in the enabled state will be automatically carried to each interface in that scenario",
        "globalCookie": "Global cookie",
        "globalHeader": "Global header",
        "globalVar": "Global param",
        "globalAssert": "Global assert",
        "sceneCookie": "Scene cookie",
        "sceneHeader": "Scene header",
        "sceneVar": "Scene var",
        "sceneAssert": "Scene assert",
        "look": "Be careful",
        "deletePresetTitle": "Delete Config",
        "deletePreset1": "confirm deletion",
        "deletePreset2": "？Cannot be recovered after deletion",
        "deletePlan": "Are you sure you want to delete this schedule?",
        "deleteReport": "Are you sure you want to delete this report?",
        "deleteScene": "Are you sure you want to delete this scenario?",
        "deleteApi": "Are you sure you want to delete this api",
        "deleteGroup": "Are you sure you want to delete this group? This operation will delete the scenes under the group together!!",
        "deleteFolder": "Are you sure you want to delete this folder? This operation will delete the interface under the folder!",
        "deleteEnv": "Are you sure you want to delete this environment?",
        "deleteService": "Are you sure you want to delete this service?",
        "deleteDb": "Are you sure you want to delete this database?",
        "invitation": "Invite",
        "roleList": {
            "0": "Member",
            "1": "Admin",
            "2": "Super Admin"
        },
        "addTeamMem": "Add an existing team member",
        "teamMem": "Team members",
        "logTitle": "History (only two days of records are saved）",
        "operator": "Operator",
        "operateTarget": "Operational Objectives",
        "operateDate": "Operation time",
        "today": "Today",
        "yesterday": "Yesterday",
        "createTeam": "New Team",
        "teamManage": "Team management",
        "quitTeam": "Exit the team",
        "confirmQuit": "Confirm Exit",
        "dissmissTeam": "Dismantle the team",
        "dissmissContent1": "Before you submit the application for team dissolution, please confirm the following information to ensure the security of your information and property:",
        "dissmissContent2": "1. Team data has been transferred or deleted. Dissolving a team will delete all interfaces, scenarios, plans, reports and other data under the team; Other members of the team will automatically exit the team.",
        "dissmissContent3-1": "2. The team property has been settled. Before dismissing the team, you need to properly handle all capital issues in order management. If you have any questions, please contact customer service WeChat first:",
        "dissmissContent3-2": "After confirmation, continue to dissolve the team. After the team is disbanded, the package, VUM, qualification, coupons, tickets and other cards you purchased at RunnerGo will be deemed to be abandoned by you and will not be able to continue to use. RunnerGo cannot assist you in restoring the aforementioned services. Please confirm that the team has no assets, arrears, outstanding funds and virtual interests.",
        "dissmissContent4": "By clicking the 'Confirm Dissolution' button, you have read and agreed to the above contents.",
        "transferTeam": "Handover Team",
        "team": "Team",
        "delMem": "Remove Members",
        "confirmDelMem": "Confirm to remove",
        "teamMemTitle": "Team member list",
        "me": "me",
        "editName": "Edit nickname",
        "defaultAvatar": "Default avatar",
        "diyAvatar": "Custom avatar",
        "avatarTips": "Support jpg, jpeg, png format images, with a size of no more than 3M",
        "edit": "Edit",
        "editPwd": "Modify mailbox password",
        "updateAvatar": "Modify avatar",
        "knowUrl": "Invite by link",
        "copyUrl": "Copy invitation link",
        "previewTitle": "File preview",
        "trash": "Trash",
        "delFolder": "Deleted Directory",
        "delApi": "Deleted API",
        "shiftDelFolder": "Shift delete directory",
        "DelFolderContent": "Are you sure you want to delete this directory completely? This operation is not recoverable",
        "restoreFolder": "Restore directory",
        "restoreFolderContent": "Are you sure you want to restore this directory?",
        "shiftDel": "Shift delete",
        "restoreApi": "Restore API",
        "refresh": "Refresh",
        "tips": "Prompt",
        "now": "",
        "tag": "label",
        "notSave": "is not saved. Do you want to close it? If you choose to turn it off, these changes will be lost.",
        "forceClose": "Force close",
        "closeNow": "",
        "closeOther": "Confirm to close other",
        "closeNowLast": " tabs unsaved changes. Your changes will be lost if you force close this tab. Are you sure you want to force close?",
        "pwdError": "Password error",
        "pwdLength": "Password length shall be at least 6 digits",
        "pwdDiff": "The passwords entered do not match",
        "invitateSuccess": {
            "title": "Adding a result Notification",
            "message-1": "Successfully added",
            "message-2": "people",
            "message-3": "unregistered",
            "message-4": "All invitees have been notified by email",
            "unRegister": "Unregistered email address"
        },
        "editTeamName": "Edit Team Name",
        "sceneNotSave": "The current scene has not been saved. Do you want to save it?",
        "caseNotSave": "The current case has not been saved. Do you want to save it?？",
        "envManage": "Env Manage",
        "envName": "Env Name",
        "service": "Services",
        "cronExplain": "In the timing mode, only one scenario can be created in the plan at most",
        "linkTips": "The invitation link is valid within 24 hours",
        "deleteFile": "Are you sure to delete this file? It cannot be retrieved after deletion!",
        "deleteOrderConfirm": "Are you sure to delete this order?",
        "addCompanyMember": "Add members within the enterprise",
        "companyRole": "Company role",
        "teamRole": "Team role",
        "function": "Function",
        "functionName": "Function name",
        "remark": "Remark",
        "permissionDenied": "You currently do not have permission for this operation",
        "setTagName": "Set Tag Name",
        "tagName": "Tag Name",
        "deleteTagContent": "Are you sure to delete Tag",
        "restoreHistory": "Restore History",
        "restoreHistoryContent": "A new record will be generated using the history content of {{time}}, and the original modification history will not be affected. Are you sure to restore?",
        "restoreThisRecord": "Restore this record",
        "preRecord": "previous record",
        "curRecord": "current record",
        "earlierRecords": "earlier records",
        "thisRecord": "this record",
        "noDiff": "no diff",
        "sync": "Sync",
        "syncType": "Sync Type",
        "syncTypePush": "Push",
        "syncTypePull": "Pull",
        "selectDataSource": "Select Data Source",
        "checkAll": "Check All",
        "syncConfig": "Sync Config",
        "baseInfo": "Base Info",
        "requestParam": "Request Param",
        "requestMethod": "Request Method",
        "requestAuth": "Auth",
        "requestAssert": "Assert",
        "requestRegex": "Regex",
        "requestConfig": "Api Config",
        "requestPreScript": "Pre Script",
        "syncSceneTip": "When synchronizing a scenario, all use cases and test objects in that scenario will be synchronized. Please operate with caution!",
        "exportData": "Export Data",
        "selectedNum": "{{num}} items selected",
        "exportType": "Export Dimension",
        "sceneExportTypeList": {
            "1": "Scene",
            "2": "Case",
            "3": "Scene And Case"
        },
        "sceneApiBatchModal": {
            "nodeName": "Name",
            "method": "Method",
            "url": "URL",
            "status": "Status",
            "statusList": {
                "0": "Normal",
                "1": "Disabled"
            },
            "quoteApisName": "Quote Api Name",
            "syncApisTitle": "Sync Api Name",
            "handleType": "Operate Type",
            "push": "Push",
            "pull": "Pull",
            "selectData": "Select Data",
            "disEnableTitle": "Batch Disabled/Enabled",
            "disabled": "Disabled",
            "enabled": "Enabled",
            "select": "Select",
            "batchDeleteTitle": "Batch Delete",
            "changeServiceTitle": "Batch Change Service",
            "selectService": "Select Service"
        }
    },
    "column": {
        "teamManage": {
            "teamName": "Team Name",
            "createTime": "Creation Date",
            "creator": "Created by",
            "handle": "operation",
            "quitTeam": "Exit the team",
            "dissmissTeam": "Dismantle the team"
        },
        "transferTeam": {
            "teamMem": "Team members",
            "role": "Member Permissions",
            "handle": "operation",
            "transferTeam": "Handover Team"
        },
        "teamMember": {
            "member": "Member",
            "joinTime": "Joining date",
            "inviteBy": "Inviter",
            "power": "Personnel authority",
            "handle": "Operation"
        },
        "globalVar": {
            "title": "Global params",
            "preVar": "Predefined Global variable",
            "varName": "Variable key",
            "varVal": "Variable values",
            "varDesc": "variable description"
        },
        "machine": {
            "machineID": "Name",
            "cpu": "CPU usage",
            "cpuLoad1": "cpu-load1",
            "cpuLoad5": "cpu-load5",
            "cpcuLoad15": "cpu-load15",
            "memory": "Mem usage",
            "disk": "Disk usage",
            "maxCoprogram": "Max coroutines",
            "useCoprogram": "Coroutine used",
            "type": "Type",
            "handle": "Operation"
        },
        "preset": {
            "name": "Config name",
            "creator": "Creator",
            "taskType": "Task Type",
            "taskMode": "Mode",
            "controlMode": "Control Mode",
            "startConcurrency": "Start concurrency",
            "step": "Step",
            "stepRunTime": "Step duration",
            "maxConcurrency": "Max concurrency",
            "duration": "Duration",
            "roundNum": "Round",
            "concurrency": "Concurrency",
            "reheatTime": "Reheat time",
            "handle": "Operation",
            "debugMode": "Debug mode"
        }
    },
    "index": {
        "planNum": "Plans",
        "sceneNum": "Scenes",
        "reportNum": "Reports",
        "apiNum": "Apis",
        "running": "Running",
        "seeMore": "More",
        "seeDetail": "View details",
        "emptyData": "No Data",
        "handleLog": "History",
        "recentReport": "Recent Test Report",
        "placeholder": "Search plan name/scene name/performer",
        "reportId": "Report ID",
        "reportName": "Report name",
        "planName": "Plan name",
        "sceneName": "Scene name",
        "taskType": "Task Mode",
        "mode": "Stress Mode",
        "startTime": "Start Time",
        "endTime": "End time",
        "performer": "Performer",
        "status": "State",
        "handle": "Operation",
        "contrastText": "Please select 2-4 reports for comparison",
        "create": "New",
        "update": "Mod",
        "delete": "Del",
        "run": "Run",
        "logType": {
            "1": "New Folder",
            "2": "New API",
            "3": "New Group",
            "4": "New Plan",
            "5": "New Scene",
            "6": "Modify Folder",
            "7": "Modify API",
            "8": "Modify Group",
            "9": "Modify Plan",
            "10": "Modify Scene",
            "11": "Clone Plan",
            "12": "Delete Report",
            "13": "Delete Scene",
            "14": "Delete Plan",
            "15": "Run Scene",
            "16": "Run Plan",
            "17": "New Preset Config",
            "18": "Modify Preset Config",
            "19": "Delete Preset config",
            "20": "Run scenario use case",
            "21": "Modify scenario use cases",
            "22": "New environment",
            "23": "Edit environment",
            "24": "Delete environment",
            "25": "Clone environment",
            "26": "Delete environment service",
            "27": "Delete directory",
            "28": "Delete API",
            "29": "Delete directory",
            "30": "Delete scenario use cases",
            "31": "Run Plan",
            "32": "Debug API",
            "33": "Debug Scene",
            "34": "Create scenario use cases",
            "35": "Create SQL",
            "36": "Update SQL",
            "37": "Delete SQL",
            "38": "New Database",
            "39": "Drop Database",
            "40": "Update Database",
            "41": "New Service",
            "42": "Update Service",
            "43": "Create WebSocket",
            "44": "Modify WebSocket",
            "45": "Delete WebSocket",
            "46": "Create WebSocket",
            "47": "Modify WebSocket",
            "48": "Delete WebSocket",
            "49": "Create MQTT",
            "50": "Modify MQTT",
            "51": "Delete MQTT",
            "52": "Create Dubbo",
            "53": "Modify Dubbo",
            "54": "Delete Dubbo",
            "55": "Create Api Case",
            "56": "Modify Api Case",
            "57": "Run One Click Stress",
            "101": "Create mock folder",
            "102": "Create mock interface",
            "103": "Modify mock folder",
            "104": "Modify mock interface",
            "105": "Debug mock interface",
            "106": "Delete mock folder",
            "107": "Delete mock interface",
            "108": "Save mock interface to target",
            "109": "Sync mock interface to target"
        }
    },
    "apis": {
        "recycle": "Trash",
        "save": "save",
        "send": "send",
        "cookie": "Cookie",
        "header": "Header",
        "query": "Query",
        "body": "Body",
        "auth": "Authentication",
        "assert": "Assertion",
        "setting": "API settings",
        "preScript": "Pre Script",
        "oneClickStressTest": "One click pressure measurement",
        "historyReport": "History Report",
        "assertBody": "Assertion body",
        "condition": "condition",
        "regular": "Association extraction",
        "key": "Key",
        "value": "Value",
        "must": "Required",
        "type": "Type",
        "desc": "Description",
        "cookieName": "Cookie Name",
        "cookieValue": "Cookie Value",
        "emptyBody": "The request has no body temporarily",
        "notAuth": "This interface does not require authentication",
        "oneWayAuth": "This api has enabled individual authentication",
        "twoWayAuth": "Only supports uploading files in crt format",
        "requestContent": "Request area",
        "responseContent": "Response area",
        "authList": {
            "noauth": "No authentication required",
            "oneway": "One-way authentication",
            "twoway": "mutual authentication",
            "kv": "Private Key Value Pair",
            "bearer": "bearer auth authentication",
            "basic": "Basic auth authentication",
            "digest": "Digest auth authentication",
            "oauth1": "OAuth 1.0",
            "hawk": "Hawk authentication",
            "awsv4": "AWS Signature",
            "ntlm": "NTLM Authentication [Beta]",
            "edgegrid": "Akamai EdgeGrid"
        },
        "assertSelect": {
            "resHeader": "Response Header",
            "resBody": "Response Body",
            "resCode": "Code"
        },
        "field": "field",
        "compareSelect": {
            "eq": "Equal to",
            "uneq": "Not equal to",
            "gt": "Greater than",
            "gte": "Greater than or equal to",
            "lt": "Less than",
            "lte": "Less than or equal to",
            "includes": "Contains",
            "unincludes": "Not included",
            "null": "Equal to null",
            "notnull": "Not equal to null"
        },
        "val": "Value",
        "varName": "variable name",
        "expression": "expression",
        "response": "Res",
        "reqHeader": "Req Header",
        "reqBody": "Req Body",
        "resHeader": "Res Header",
        "resBody": "Res Body",
        "resAssert": "Assert",
        "resRegular": "Extract",
        "resEmpty": "Enter the url and click the Send button to get the response result",
        "resSqlEmpty": "Enter SQL and click the send button to obtain the response result",
        "createApi": "New API",
        "createFolder": "New directory",
        "createObject": "New Test Object",
        "importApi": "Import Interface",
        "importProject": "Import Project",
        "expand": "Expand | Collapse All",
        "tabMore": [
            "Close All Labels",
            "Force Close All Labels",
            "Close Other Labels",
            "Force Close Other Labels",
            "Save All Labels"
        ],
        "copyApi": "Clone Api",
        "deleteApi": "Delete Api",
        "exportApi": "Export Api",
        "exportFolder": "Export Folder",
        "editFolder": "Edit Directory",
        "deleteFolder": "Delete Directory",
        "createHttp": "New HTTP Request",
        "createMySQL": "New MySQL",
        "createSql": "New SQL",
        "createOracle": "New Oracle",
        "createTcp": "New TCP",
        "createWs": "New WebSocket",
        "createMqtt": "New MQTT",
        "createDubbo": "New DUBBO",
        "parentFolder": "Parent directory",
        "rootFolder": "Root directory",
        "folderName": "Directory name",
        "folderDesc": "Directory description",
        "import": "Import Interface | Project",
        "createOn": "Created on",
        "updateOn": "Update on",
        "tips": "Tips",
        "closeConfirm": "Are you sure to close the unsaved current label?",
        "notSave": "Discard Changes",
        "saveAndClose": "Save and Close",
        "closeAllTarget": "Close All Labels",
        "focreCloseAllTarget": "Force Close All Labels",
        "closeOtherTargetById": "Close Other Labels",
        "focreCloseOtherTargetById": "Force other tags off",
        "saveAllTarget": "Save All Labels",
        "cantVisit": "The following content cannot be accessed",
        "go": "go",
        "askHelp": "Official website for more information or help",
        "cloneApi": "Clone Api",
        "pasteApi": "Paste Api",
        "more": "More",
        "selectFile": "Upload files",
        "noData": "No Data",
        "regular_text": "regular",
        "regular_header": "response header",
        "regular_code": "response code",
        "followRedirect": "Follow Redirection",
        "redirectNums": "Redirect times",
        "reqTimeout": "Request read timeout limit",
        "unit": "order",
        "zeroExplain": "(0 seconds represents unlimited)",
        "resTimeout": "Response read timeout limit",
        "minute": "second",
        "clientName": "client name",
        "maxFreeWaitTime": "Maximum idle waiting time",
        "maxConnectWaitTime": "Maximum connection waiting time",
        "maxConnectNum": "maximum connection",
        "number": "individual",
        "keepAlive": "Keep alive (HTTP long connection)",
        "connectDb": "linked database",
        "selectDb": "Select Database",
        "databaseConnectInfo": "Database Connect Information",
        "dbDiyName": "name",
        "dbName": "database name",
        "ip": "IP Address",
        "port": "PORT",
        "user": "user name",
        "pwd": "password",
        "charset": "Charset",
        "index": "Index",
        "connectTest": "Connection testing",
        "eventName": "Event name",
        "eventDesc": "Event desc",
        "sql": {
            "tabList": {
                "0": "Edit SQL",
                "1": "Assertion",
                "2": "Regex",
                "3": "DataBase Info"
            }
        },
        "tcp": {
            "sendMessage": "send message",
            "config": "set up",
            "connectType": {
                "1": "Long Connection",
                "2": "Short connection"
            },
            "autoSend": {
                "label": "Auto Send",
                "explain": "Check to automatically send a message after successful connection"
            },
            "connectDuration": {
                "label": "Connection duration (maximum 100s)",
                "explain": "How long will the TCP connection be disconnected this time (in seconds)"
            },
            "sendMessageInterval": {
                "label": "Interval length between sending messages",
                "explain": "The interval between sending messages cannot exceed the duration of the connection (in milliseconds)"
            },
            "connectTimeout": {
                "label": "Connection timeout setting",
                "explain": "Set the timeout period (in milliseconds) for socket request connection waiting. Please set the never timeout to 0."
            },
            "retryNum": {
                "label": "Reconnect attempt",
                "explain": "The maximum number of attempts to reconnect when the connection suddenly disconnects."
            },
            "retryInterval": {
                "label": "Reconnect interval",
                "explain": "The time interval between each reconnection attempt. (in milliseconds)"
            },
            "msgList": "message list",
            "msgState": {
                "0": "All messages",
                "1": "Success Message",
                "2": "Failure Message"
            },
            "clearMsg": "clear message",
            "requestMsg": "send message",
            "responseMsg": "response message",
            "connectSuccess": "connect success"
        },
        "cloneCurrentTag": "Clone current tag",
        "ws": {
            "reqTab": {
                "0": "Send message",
                "1": "Request header",
                "2": "Request param",
                "3": "Event",
                "4": "Config"
            }
        },
        "dubbo": {
            "reqTab": {
                "0": "Base Param",
                "1": "Assertion",
                "2": "Regex"
            },
            "registerName": "Register name",
            "registerAddress": "Register address",
            "version": "Version"
        },
        "versionManage": "Version Manage",
        "markTagVersion": "Tag version",
        "mySelf": "MySelf",
        "markedTag": "Marked",
        "baseInfo": "Basic information",
        "cookieParam": "Request Parameter Cookie",
        "headerParam": "Request Parameter Header",
        "queryParam": "Request Parameter Query",
        "bodyParam": "Request parameter Body",
        "authParam": "Request parameter Auth",
        "assertParam": "Assertion",
        "regexParam": "Association extraction",
        "httpSetParam": "Api settings",
        "baseParam": "Base Params",
        "config": "Config",
        "sqlString": "SQL",
        "databaseInfo": "Database Info",
        "requestParam": "Request Param",
        "historyCompare": "History Compare",
        "editTag": "Edit Tag",
        "deleteTag": "Delete Tag",
        "extract": "Extract Key",
        "export": "Export",
        "execResponse": "Exec Response",
        "saveToEnv": "Save To Env",
        "saveCase": "Save Case",
        "saveToCase": "Save To Case",
        "updateToApi": "Update To Api",
        "updateToCase": "Update To Case",
        "runConfig": "Run Config",
        "uploadDataFile": "Upload Data File",
        "apiCase": "Api Case"
    },
    "elements":{
        "createElement":"Create New Element",
        "createScene":"Create New Scene"
    },
    "scene": {
        "fullScreen": "Full screen",
        "quitFullScreen": "Quit Full screen",
        "editGroup": "Edit Group",
        "deleteGroup": "Delete Group",
        "createScene": "New Scene",
        "editScene": "Edit Scene",
        "deleteScene": "Delete Scene",
        "exportScene": "Export Scene",
        "cloneScene": "Clone Scene",
        "disableScene": "Disable Scene",
        "enableScene": "Enable Scene",
        "createApi": "New API",
        "createControl": "Add Controller",
        "waitControl": "Delay controller",
        "conditionControl": "Condition Controller",
        "createTestObj": "Create Test",
        "importTestObj": "Import Test",
        "importApi": "Add API",
        "groupName": "Group Name",
        "groupDesc": "Group Description",
        "sceneName": "Scene Name",
        "sceneDesc": "Scene Description",
        "sceneConfig": "Scene Settings",
        "new": "New",
        "group": "Group",
        "varName": "Variable name",
        "varVal": "Variable value",
        "varDesc": "Variable Description",
        "addFile": "Add File",
        "addVar": "Add Variable",
        "fileSize": "Support adding csv and txt files within 10M",
        "preview": "preview",
        "download": "download",
        "delete": "delete",
        "condition": "If Controlletr",
        "wait": "Delay Controller",
        "weight": "API Weight",
        "value": "value",
        "errorValue": "Error rate  threshold",
        "threshold": "Threshold",
        "thresholdTime": "Threshold ms",
        "line": "Line",
        "resTime": "Res time threshold",
        "reqValue": "Requests Threshold",
        "modeList": {
            "1": "Default mode",
            "3": "Error rate  Mode",
            "4": "Res Time mode",
            "5": "RPS request mode"
        },
        "editApi": "Edit",
        "deleteApi": "Delete",
        "disableApi": "Disable",
        "startApi": "Start",
        "copyApi": "Copy",
        "importApiTitle": "API AddIt",
        "importSqlTitle": "SQL AddIt",
        "addApi": "Add API",
        "addSql": "Add SQL",
        "addPreCondition": "Add Preconditions",
        "onlyOnePreCond": "Only one prerequisite can be configured",
        "errorRate": "eg: 0.0001",
        "avgTime": "avg res time",
        "apiAssert": "API Assert",
        "fileCnFormat": "When uploading CSV and txt files containing Chinese characters, the file format needs to be changed to UTF-8 encoding",
        "runTime": "execution time",
        "preCondition": "Preconditions",
        "introduce": "introduce",
        "exportOrImport": "Import/Export",
        "batchOperate": "Batch Operate",
        "batchList": {
            "0": "Disable/Enable",
            "1": "Async Test",
            "2": "Change Services",
            "3": "Delete"
        }
    },
    "plan": {
        "planId": "Plan ID",
        "planName": "Plan name",
        "taskType": "Task Mode",
        "mode": "Stress Mode",
        "controlMode": "Control Mode",
        "controlModeList": {
            "0": "Focus Mode",
            "1": "Alone Mode"
        },
        "controlExplain": {
            "0": "Centralized mode: simultaneous pressurization. (Start all concurrency (set concurrency number/thread/coroutine) at the same time. When the set concurrency number is all over (one thread (coroutine) needs to wait for other threads (coroutine) to finish), restart the set concurrency to exert pressure.)",
            "1": "Separate mode: separate startup (start all concurrent processes (set concurrent number/threads/coroutines) at the same time. When one or some threads (coroutines) are completed, start the completed threads (coroutines) again without waiting for other threads (coroutines)"
        },
        "createTime": "Created on",
        "updateTime": "Last modified by",
        "status": "State",
        "operator": "Performer",
        "remark": "Note",
        "handle": "Operation",
        "planManage": "Plan Management",
        "planDesc": "Plan description",
        "createdBy": "Created by",
        "notRun": "Not running",
        "running": "Running",
        "expired": "Expired",
        "preinstall": "Default",
        "group": "grouping",
        "createScene": "New Scene",
        "importScene": "Import Scene",
        "taskConfig": "Task allocation",
        "importPre": "Importing Default",
        "taskList": {
            "commonTask": "Common tasks",
            "cronTask": "Timed tasks",
            "mixTask": "Mixed Tasks"
        },
        "modeList": {
            "1": "QPS Mode",
            "2": "Ladder Mode",
            "3": "Error Rate Mode",
            "4": "Res Time Mode",
            "5": "RPS Mode",
            "6": "Round Mode",
            "7": "Mixed Mode"
        },
        "statusList": {
            "1": "Not running",
            "2": "Running"
        },
        "duration": "Duration",
        "roundNum": "Round",
        "concurrency": "Concurrency",
        "reheatTime": "Preheating",
        "startConcurrency": "Start concurrency",
        "step": "Step",
        "stepRunTime": "Step Duration",
        "maxConcurrency": "Max concurrency",
        "fillInCron": "Fill in cron expression",
        "set": "set up",
        "second": "Round",
        "editPlan": "Edit Plan",
        "createPlan": "New Plan",
        "configEchart": "Pressure gradient diagram",
        "yUnit": "Concurrency(individual)",
        "xUnit": "Time(s)",
        "frequency": "frequency",
        "frequencyList": {
            "0": "once",
            "1": "every day",
            "2": "weekly",
            "3": "monthly",
            "4": "fixed time interval"
        },
        "startTaskTime": "Start execution time",
        "explain": "After saving the configuration and starting to run, it will automatically run at the specified time. The effective time range of this scheduled task is 365 days after setting",
        "reheatExplain": "Start all concurrency within the set time range",
        "showMask": "Task configuration cannot be changed during plan execution",
        "cantDelete": "There are plans in operation, unable to delete!",
        "cantEdit": "Please stop running the plan first!",
        "debugMode": "Debug mode",
        "debugMode-0": "close",
        "debugMode-1": "Enable - All Logs",
        "debugMode-2": "On - Success Log Only",
        "debugMode-3": "On - only error logs",
        "machineName": "Machine Name",
        "region": "Region",
        "ip": "IP",
        "weight": "Weight（%）",
        "seniorConfig": "advanced setting",
        "customDistributed": "Custom Distributed",
        "totalWeightTip": "Default allocation of machine operation, total weight must be 100%",
        "useDiyRun": "The default allocation machine runs, and when opened, it will run according to the custom distribution",
        "machineAllotType": {
            "0": "Weight",
            "1": "Custom"
        },
        "switchDuration": "Switch to Round",
        "switchRoundNum": "Switch to duration",
        "echartEmptyShow": "Unable to generate ladder diagram due to incomplete configuration",
        "runNum": "Run Num",
        "minute": "Minute",
        "hour": "Hour"
    },
    "report": {
        "done": "Completed",
        "performer": "Performer",
        "createTime": "Creation Time",
        "runTime": "Execution duration",
        "debugList": {
            "0": "Debug off",
            "1": "Debug select: All logs",
            "2": "Debug select: Error log",
            "3": "Debug select: Succeed log"
        },
        "taskList": {
            "1": "Common tasks",
            "2": "Timed tasks"
        },
        "tabList": {
            "0": "Test details page",
            "1": "Debug log",
            "2": "Press monitoring",
            "3": "Monitored by service"
        },
        "statusList": {
            "1": "Running",
            "2": "Completed"
        },
        "taskType": "Task Type",
        "dcs": "Distributed",
        "yes": "Yes",
        "no": "No",
        "mode": "Pressure measurement mode",
        "apiName": "Api name",
        "totalReqNum": "Requests",
        "totalResTime": "Overall res time(s)",
        "max": "Max(ms)",
        "min": "Min(ms)",
        "avg": "Avg(ms)",
        "90%": "90%",
        "95%": "95%",
        "99%": "99%",
        "qps": "Tps",
        "srps": "SRPS",
        "errNum": "Error number",
        "errRate": "Error rate",
        "acceptByte": "Received bytes",
        "sendByte": "Send bytes",
        "tps": "throughput",
        "qpsNum": "Requests per second",
        "concurrency": "Concurrency",
        "avgList": "Average response time",
        "50%List": "50% Response Timeline",
        "90%List": "90% Response Timeline",
        "95%List": "95% Response Timeline",
        "99%List": "99% Response Timeline",
        "collect": "Collect",
        "debugEmpty": "Please turn on Debug mode",
        "title": "Test report",
        "contrastReport": "Comparison report",
        "configRun": "Run",
        "configRunSuccess": "Run successful!",
        "reportResult": "Report results",
        "reportDesc": "Result analysis",
        "_tps": "tps",
        "stps": "stps",
        "debugLogTips": "Please open the debug log and view the log. Opening the debug log will consume the performance of the press. Please be careful! The debug log only retains the last 1000 data!",
        "unitMs": "Unit (ms)",
        "unitNumber": "Unit (number)",
        "machineName": "Machine Name",
        "config": "Config",
        "export": "Export",
        "cantDelete": "There is a running report and cannot be deleted!"
    },
    "tooltip": {
        "start": "Run",
        "stop": "Stop",
        "view": "See",
        "copy": "Copy",
        "delete": "Delete",
        "company_admin": "Enterprise Admin Dashboard",
        "exportReport": "Export Report",
        "timedPlanExpire": "The scheduled task for this plan has expired",
        "preScriptInputTips": "The execution result of the following code will be assigned to this variable, and {{variable name}} will be used when passing parameters on the interface"
    },
    "machine": {
        "serverType": {
            "1": "Main machine",
            "2": "Standby machine"
        }
    },
    "preset": {
        "performance": "performance testing",
        "automation": "automated testing"
    },
    "case": {
        "caseSet": "Case Set",
        "whatCase": "What is a use case set?",
        "caseExplain": "Use cases work only for automated testing. When there are multiple use cases for interfaces in a scenario, we can set different parameters of interfaces in the same scenario by creating scenario use cases, so as to flexibly conduct automated testing",
        "caseName": "Case Name",
        "caseDesc": "Case Description",
        "createCase": "Create Case",
        "cloneCase": "Clone Case",
        "deleteCase": "Delete Case",
        "isRun": "Run or not",
        "runCase": "Debug Case",
        "editCase": "Edit Case"
    },
    "autoReport": {
        "taskMode": {
            "1": "Use Case"
        },
        "testCaseRunOrder": {
            "1": "In Order",
            "2": "Run"
        },
        "sceneRunOrder": {
            "1": "In Order",
            "2": "Run"
        },
        "caseOrder": "Case Run Order",
        "sceneOrder": "Scene Run Order",
        "runMode": "Run Mode",
        "scene": "Scene",
        "case": "Case",
        "performer": "Performer",
        "planDesc": "Plan desc",
        "notifyEmail": "Notify email",
        "startTime": "Start time",
        "endTime": "End time",
        "runTime": "Run time",
        "sceneTotal": "Scenes",
        "caseTotal": "Cases",
        "apiTotal": "Apis",
        "assertTotal": "Asserts",
        "successNum": "Success",
        "failNum": "Fail",
        "notNum": "Not run",
        "sceneResult": "Scene Results",
        "caseResult": "Case Results",
        "apiDetail": "Api Details",
        "assert": "Assert",
        "detail": "Detail",
        "all": "All",
        "fail": "Fail",
        "success": "Success",
        "notRun": "Not run",
        "reqHeader": "req Header",
        "reqBody": "req Body",
        "resHeader": "res Header",
        "resBody": "res Body",
        "reportTitle": "Report overview",
        "caseTooltip": "Success/total number of cases",
        "apiTooltip": "Number of successful api/total number",
        "noData": "no Data"
    },
    "home": {
        "totalApi": "Total api",
        "totalScene": "Total scene",
        "citeApi": "Cite api",
        "notCiteApi": "Not cite api",
        "citeScene": "Cite scene",
        "notCiteScene": "Not cite scene",
        "lastSeven": "Recent 7 days",
        "addNum": "New amount",
        "debugNum": "Debug amount",
        "apiManage": "Api manage",
        "sceneManage": "Scene manage",
        "lastSevenAddCase": "New use cases in recent 7 days",
        "autoRun": "Auto - Executed",
        "autoNotRun": "AUto - Not Run",
        "autoTest": "Auto testing",
        "stressRun": "Stress - Executed",
        "stressNotRun": "Stress - Not Run",
        "stressTest": "Stress testing",
        "teamView": "Team overview",
        "passRate": "Passing rate",
        "notPassRate": "Unmeasured/failed rate",
        "planNum": "Plans",
        "reportNum": "Reports",
        "caseNum": "Cases",
        "execCaseNum": "Exec case",
        "passCase": "Pass case",
        "citeApiNum": "Cite api",
        "citeSceneNum": "Cite scene",
        "lastReport": "Recent Reports",
        "reportId": "Report ID",
        "planName": "Plan name",
        "taskMode": "Task mode",
        "runUser": "Performer",
        "status": "state",
        "normalPlan": "Common Tasks",
        "timedPlan": "Scheduled Tasks",
        "apiNum": "Apis",
        "sceneNum": "Scenes",
        "rankId": "Id"
    },
    "invoice": {
        "openInvoice": "draw a bill",
        "invoiceType": "Invoice type",
        "invoiceTypeList": {
            "1": "VAT special invoice",
            "2": "Ordinary VAT invoice"
        },
        "invoiceInfo": "Invoice info",
        "invoiceHeader": "Invoice Header",
        "phone": "Telephone",
        "taxNumber": "Tax identification number",
        "taxIdError": "Please fill in 15-digit, 18-digit or 20-digit numbers",
        "openBank": "Bank of deposit",
        "openAddress": "Billing address",
        "bankAccount": "bank account",
        "moreContent": "More information (fill in the billing address, address, bank of deposit, etc.)",
        "postMethod": "Method of sending tickets",
        "postMethodList": {
            "1": "Electronic ticket",
            "2": "mail"
        },
        "acceptEmail": "Recipient mailbox",
        "emailFormatError": "Mailbox format error"
    },
    "env": {
        "addService": "Add Service",
        "updateService": "Update Service",
        "protocolType": "Protocol",
        "serviceName": "Service name",
        "serviceContent": "Service content",
        "dbName": "Database name",
        "handle": "Handle",
        "addDb": "Add Database",
        "updateDb": "Update Database",
        "dbType": "Type",
        "name": "Name",
        "ip": "IP",
        "port": "Port",
        "user": "User",
        "pwd": "Password",
        "charset": "Charset",
        "dbConnectInfo": "Database Connect Info",
        "editEnv": "Edit env",
        "cloneEnv": "Clone env",
        "deleteEnv": "Delete env",
        "createEnv": "Create env",
        "service": "Service",
        "database": "Database",
        "empty": "No Data",
        "envManage": "Env Manage",
        "serviceTabExplain": "If interfaces in the same environment require different pre URLs or server addresses, multiple services can be created to meet the requirements. When switching environments, the services used by the interface will also switch to the corresponding services in the new environment",
        "dbTabExplain": "If SQL in the same environment needs to connect to different databases, multiple databases can be created to meet the requirements. When switching environments, the database used by SQL will also switch to the corresponding database in the new environment",
        "emptyEnv": "No Env"
    },
    "mock": {
        "createMock": "Create mock",
        "createFolder": "Create folder",
        "createMockApi": "Create mock API",
        "pathPlaceholder": "Please enter the API path",
        "saveTestObj": "Save to test object",
        "syncToTestObj": "Sync to test object",
        "copyMockUrl": "Copy Mock URL",
        "createResponseExpect": "Create response expectation",
        "expect_name_cannot_null": "Expectation name cannot be empty",
        "create_expect": "Create expectation",
        "expect_name": "Expectation name",
        "content_format": "Content format",
        "create_ecpect_input_placeholder": "Please enter an API name between 1-30 characters",
        "open_mock": "Enable Mock",
        "close_mock": "Disable Mock",
        "conditional_statement": "Conditional Statement",
        "return_data": "Return Data",
        "visual_structure": "Visual Structure",
        "native_mode": "Native Mode",
        "parameter_position": "Parameter Position",
        "comparison": "Comparison"
    },
    "import": {
        "import_file": "Import file",
        "import_mock_api": "Import mock API",
        "mock_api": "Mock API"
    }
}